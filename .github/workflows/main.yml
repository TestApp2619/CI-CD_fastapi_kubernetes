name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # Updated to v4

    - name: Verify secrets are available
      run: |
        if [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
          echo "Error: DOCKERHUB_USERNAME secret is not set"
          exit 1
        fi
        if [ -z "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
          echo "Error: DOCKERHUB_TOKEN secret is not set"
          exit 1
        fi
        echo "All Docker Hub secrets are available"

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3  # Updated to v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3  # Updated to v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3  # Updated to v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-k8s
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest

    - name: Build and push
      uses: docker/build-push-action@v5  # Updated to v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64  # Multi-platform build
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # Updated to v4

    - name: Verify Kubernetes secret
      run: |
        if [ -z "${{ secrets.KUBECONFIG }}" ]; then
          echo "Error: KUBECONFIG secret is not set"
          exit 1
        fi
        echo "KUBECONFIG secret is available"

    - name: Configure kubectl
      uses: azure/k8s-set-context@v4  # Updated to v4
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBECONFIG }}

    - name: Verify kubectl connection
      run: |
        kubectl cluster-info
        kubectl get nodes

    - name: Update deployment image
      run: |
        # Update the image in deployment.yaml with the new tag
        kubectl set image deployment/fastapi-k8s-deployment \
          fastapi-k8s=${{ secrets.DOCKERHUB_USERNAME }}/fastapi-k8s:main-${{ github.sha }}

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml

    - name: Verify deployment
      run: |
        kubectl rollout status deployment/fastapi-k8s-deployment
        kubectl get pods -l app=fastapi-k8s